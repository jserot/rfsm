-- Computes the GCD of two integers using Euclid's algorithm

fsm model gcd(
  in h: event,
  in start: bool,
  in x: int,
  in y: int,
  out rdy: bool,
  out r: int)
{
  states: Repos where rdy=1, Calcul where rdy=0;
  vars: a: int, b: int, tmp: int;
  trans:
  | Repos -> Calcul on h when start=1 with a:=x, b:=y
  | Calcul -> Calcul on h when b!=0 with tmp:=a, a:=b, b:=tmp % b
  | Calcul -> Repos on h when b=0 with r:=a;
  itrans:
  | -> Repos;
}

input H : event = periodic(10, 0, 1000)
input x : int = value_changes(0:12, 100:30, 200:20)
input y : int = value_changes(0:5, 100:45, 200:20)
input Start : bool = value_changes(0:0, 35:1, 45:0, 105:1, 115:0, 205:1, 215:0)
output Rdy : bool
output r : int

fsm s = gcd(H,Start,x,y,Rdy,r)
