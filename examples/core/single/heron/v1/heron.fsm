-- Iterative computing of \sqrt{a} using Heron's algorithm
-- v1: fixed number of iterations

fsm model Heron<niter: int>(
  in h: event,
  in start: bool,
  in u: float,
  out rdy: bool,
  out r: float)
{
  states: Idle where rdy=1, Iter where rdy=0;
  vars: a: float, x: float, n: int;
  trans:
  | Idle -> Iter on h when start=1 with a:=u, x:=u, n:=0
  | Iter -> Iter on h when n<niter with x:=(x+.a/.x)/.2., n:=n+1
  | Iter -> Idle on h when n=niter with r:=x;
  itrans:
  | -> Idle;
}
