-- Serial to parallel converter (1 start bit, LSB->MSB, 1 parity bit, 1 stop bit)

type bit = int<1>

fsm model Rxd<n: int>(
  in clk: event,
  in sin: bit,
  out dout: int<8>,
  out err: bool)
{
  states: Idle, Sync, Rx;
  vars: i: int<0:8>,
        k: int<0:n>,
        r: int<8>,
        p: int<1>;
  trans:
  | Idle -> Sync on clk when sin=0 with r:=0, k:=0
  | Sync -> Sync on clk when k<n/2-1 with k:=k+1
  | Sync -> Rx on clk when k=n/2-1 with k:=0, i:=0, p:=0
  | Rx -> Rx on clk when k<n-1 with k:=k+1
  | Rx -> Rx on clk when (k=n-1).(i<8) with r[i]:=sin, p:=p^sin, k:=0, i:=i+1
  | Rx -> Idle on clk when (k=n-1).(i=8) with err:=p^sin=0, dout:=r;
  itrans:
  | -> Idle;
}
