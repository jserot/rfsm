# Iterative computing of \sqrt{a} using Heron's algorithm
# v1: fixed number of iterations

fsm model Heron <niter: int> (
  in h: event, 
  in start: bool,
  in u: float,
  out rdy: bool,
  out r: float)
 {
  states: Idle, Iter;
  vars: a, x: float, n:int;
  trans:
    Idle -- h.start=1 | a:=u; x:=u; rdy:=0; n:=0 -> Iter,
    Iter -- h.n<niter | x:=(x+.a/.x)/.2.0; n:=n+1 -> Iter,
    Iter -- h.n=niter | r:=x; rdy:=1 -> Idle;
  itrans: | rdy:=1 -> Idle;
  }
