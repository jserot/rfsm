-- Alternating bits checker 
-- Emits event on output [Err] whenever the current bit, read on input [E] when [H] occurs
-- is not the complement of the last one
-- v2: with local variable and only two states

fsm model altbit(
  in h: event,
  in e: bool,
  out err: event)
{
  states: Init, R;
  vars: last: bool;
  trans:
  | Init -> R on h when e=0 with last:=0
  | Init -> R on h when e=1 with last:=1
  | R -> R on h when last=e with err
  | R -> R on h when last!=e with last:=e;
  itrans:
  | -> Init ;
}

input H : event = periodic(10, 10, 110)
input E : bool = value_changes(5:0, 15:1, 25:0, 35:1, 45:1, 55:0, 65:1, 75:0, 85:0, 95:0, 105:1)
output Err : event

fsm a1 = altbit(H,E,Err)
