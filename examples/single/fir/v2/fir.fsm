# Model of 1x3 Finite Impulse Responde filter
# y_i = a_0 * x_i + a_1 * x_{i-1} + a_2 * x_{i-2}
# v2: with arrays for coeffs and buffering

fsm model fir <a: int array[3]>  (
     in h: event,
     in x: int,
    out y: int)
  {
  states: Run;
  vars:
    z: int array[2]; # z[0]=zx, z[1]=zzx, ... 
  trans:
    Run -- h | y:=a[0]*x+a[1]*z[0]+a[2]*z[1]; z[1]:=z[0]; z[0]:=x -> Run;
  itrans: | z[0]:=0; z[1]:=0 -> Run;
  }

input H:event = periodic(10,10,110)
input X: int = value_changes(0:0, 10:2, 20:4, 30:6, 40:-8, 50:-6, 60:4, 70:-2, 80:0)
output Y: int

fsm c = fir<[2,1,1]>(H,X,Y)
