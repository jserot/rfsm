# A mod 8 counter described as a combination of three event-synchronized mod 2 counters

fsm model cntmod2 (
  in h: event,
  out s: int<0..1>,
  out r: event)
  {
  states: E0, E1;
  trans:
    E0 -- h | s:=1 -> E1,
    E1 -- h | r; s:=0 -> E0;
  itrans: | s:=0 -> E0;
  }

input H: event = periodic(10,10,100)
output S0: int<0..1>
output S1: int<0..1>
output S2: int<0..1>
output R2: event

shared R0: event
shared R1: event

fsm C0 = cntmod2(H,S0,R0) 
fsm C1 = cntmod2(R0,S1,R1) 
fsm C2 = cntmod2(R1,S2,R2) 
