-- Synchronisation using a shared (global) variable
-- The modification of variable [v1] caused by transition A1:S1->S2 immediately 
-- causes the simulataneous transition A2:S1->S2 which, in turn, causes A3:S1->S2
-- The SystemC simulation only works thanks to the insertion of wait(delta) infered
-- from the dependency graph

fsm model A1(
  in h: event,
  out v: bool)
{
  states: S1, S2;
  trans:
  | S1 -> S2 on h with v:=1
  | S2 -> S1 on h;
  itrans:
  | -> S1 with v:=0;
}
fsm model A2(
  in h: event,
  inout v1: bool,
  out v2: bool)
{
  states: S1, S2;
  trans:
  | S1 -> S2 on h when v1=1 with v2:=1
  | S2 -> S1 on h with v1:=0;
  itrans:
  | -> S1 with v2:=0;
}
fsm model A3(
  in h: event,
  inout v: bool)
{
  states: S1, S2;
  trans:
  | S1 -> S2 on h when v=1
  | S2 -> S1 on h with v:=0;
  itrans:
  | -> S1 ;
}

input H : event = periodic(10, 10, 100)
shared v1 : bool
shared v2 : bool

fsm a1 = A1(H,v1)
fsm a2 = A2(H,v1,v2)
fsm a3 = A3(H,v2)
