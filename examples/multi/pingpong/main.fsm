# A Ping-Pong model
#
# FSM A sends "Ping" to FSM B and waits for answer "Pong"
# FSM B waits for "Ping" and emits "Pong" back after a pre-defined delay

fsm model A (
  in top: event,
  in pong: event,
  out ping: event)
{
  states: Repos, AttPong;
  trans:
    Repos -- top | ping -> AttPong,
    AttPong -- pong -> Repos;
  itrans: -> Repos;
}

fsm model B <delay:int> (
  in h: event,
  in ping: event,
  out pong: event)
{
  states: AttPing, Delay;
  vars: t: int;
  trans:
    AttPing -- ping | t:=delay -> Delay,  
    Delay -- h.t>0 | t:=t-1 -> Delay,  
    Delay -- h.t=0 | pong -> AttPing;  
  itrans: -> AttPing;
}

input H: event = periodic(1, 0, 10)
input Top: event = sporadic(4)
shared Ping, Pong: event

fsm A = A(Top,Pong,Ping)
fsm B = B<3>(H,Ping,Pong)
